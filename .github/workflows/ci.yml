name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  debug-commits:
    runs-on: ubuntu-latest
    outputs:
      user-service-condition: ${{ steps.check.outputs.user-service-condition }}
      order-service-condition: ${{ steps.check.outputs.order-service-condition }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug - print modified files and evaluate condition
        id: check
        run: |
          echo "Modified files: ${{ toJson(github.event.commits.*.modified) }}"
          echo "User-service condition result: ${{ contains(join(fromJson(toJson(github.event.commits)).*.modified, ''), 'user-service/') }}"
          echo "Order-service condition result: ${{ contains(join(fromJson(toJson(github.event.commits)).*.modified, ''), 'order-service/') }}"

          echo "user-service-condition=${{ contains(join(fromJson(toJson(github.event.commits)).*.modified, '/user-service'), 'user-service/') }}" >> $GITHUB_OUTPUT
          echo "order-service-condition=${{ contains(join(fromJson(toJson(github.event.commits)).*.modified, ''), 'order-service/') }}" >> $GITHUB_OUTPUT

  build-user-service:
    needs: debug-commits
    if: needs.debug-commits.outputs.user-service-condition == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn -f user-service/pom.xml clean package
      - run: docker build -t user-service:latest ./user-service

  build-order-service:
    needs: debug-commits
    if: needs.debug-commits.outputs.order-service-condition == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn -f order-service/pom.xml clean package
      - run: docker build -t order-service:latest ./order-service
