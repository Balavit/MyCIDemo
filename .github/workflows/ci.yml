name: CI Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      user-service-condition: ${{ steps.check.outputs.user-service-condition }}
      order-service-condition: ${{ steps.check.outputs.order-service-condition }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # needed to compare commits

      - name: Get changed files
        id: diff
        run: |
          echo "Comparing ${{ github.event.before }} -> ${{ github.sha }}"
          git fetch origin ${{ github.event.before }} --depth=1 || true
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > files.txt
          echo "Changed files:"
          cat files.txt

      - name: Evaluate service changes
        id: check
        run: |
          if grep -q "^user-service/" files.txt; then
            echo "user-service-condition=true" >> $GITHUB_OUTPUT
          else
            echo "user-service-condition=false" >> $GITHUB_OUTPUT
          fi

          if grep -q "^order-service/" files.txt; then
            echo "order-service-condition=true" >> $GITHUB_OUTPUT
          else
            echo "order-service-condition=false" >> $GITHUB_OUTPUT
          fi

  build-user-service:
    needs: detect-changes
    if: needs.detect-changes.outputs.user-service-condition == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn -f user-service/pom.xml clean package
      - run: docker build -t user-service:latest ./user-service

      - name: Restart user-service container
        run: |
          # Stop and remove old container if running
          docker ps -q --filter "name=user-service" | grep -q . && docker stop user-service && docker rm user-service || true

          # Start new container
          docker run -d --name user-service -p 8081:8080 user-service:latest

  build-order-service:
    needs: detect-changes
    if: needs.detect-changes.outputs.order-service-condition == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mvn -f order-service/pom.xml clean package
      - run: docker build -t order-service:latest ./order-service

      - name: Restart order-service container
        run: |
          # Stop and remove old container if running
          docker ps -q --filter "name=order-service" | grep -q . && docker stop order-service && docker rm order-service || true

          # Start new container
          docker run -d --name order-service -p 8082:8080 order-service:latest
